{"version":3,"sources":["Services/index.js","container/pages/detail/index.jsx","component/navbar/style.js","Redux/globalActionType.js","component/navbar/index.jsx","component/footer/style.js","component/footer/index.jsx","component/hero/style.js","component/hero/index.jsx","container/pages/movie/style.js","container/pages/movie/card-body/index.jsx","container/pages/movie/index.jsx","container/pages/not-found/index.jsx","container/home.jsx","serviceWorker.js","index.js","Redux/globalReducer.js","component/hero/img-hero.jpg","container/pages/movie/img-hero.jpg"],"names":["BaseUrl","RoutUrls","GetLastData","GetGenreMovies","GetMovieDetail","GetMovieByName","Get","url","data","params","undefined","Promise","resolve","reject","Axios","get","JSON","stringify","then","result","err","Post","method","mode","headers","catch","API","param","useStyles","makeStyles","theme","root","flexGrow","paper","cardMedia","card_img","height","media","connect","state","count","movie_list","dispatch","props","dataId","match","id","classes","useState","movieDetail","setMovieDetail","isFetching","setIsFetching","override","css","useEffect","console","log","kosong","style","display","className","Container","maxWidth","CssBaseline","Grid","container","spacing","marginTop","item","md","marginBottom","color","Card","card","CardMedia","alt","image","backdrop_path","title","CardContent","cardContent","Typography","gutterBottom","align","variant","release_date","overview","xs","production_countries","length","map","countries","index","key","name","production_companies","companies","genres","spoken_languages","spoken","popularity","revenue","runtime","status","CardActions","to","textDecoration","Button","size","startIcon","loading","grow","appCostume","backgroundColor","menuButton","marginRight","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","ActionType","PENJUMLAHAN","PENGURANGAN","CHANGE_COUNT","INITIAL_GET_DATA_MOVIE","INITIAL_GET_GENRE_MOVIE","GET_MOVIE_BY_NAME","newValue","type","payload","GetInitialDataMovie","newValueRedux","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","InputBase","onChange","event","dataByName","query","target","value","placeholder","input","inputProps","footer","background","Copyright","component","Link","href","Date","getFullYear","parentHero","postion","overflow","heroContent","top","heroButtons","imgHero","objectPosition","objectFit","genre","src","paragraph","justify","main","backgroundAttachment","backgroundPosition","backgrountRepeat","icon","cardGrid","paddingTop","paddingBottom","flexDirection","cards","results","movie","sm","poster_path","substring","PageviewOutlined","Movie","NotFound","Movie_List","Fragment","path","exact","Detail","Boolean","window","location","hostname","storeRedux","globalState","rootReducer","action","createStore","getDataGenres","renderReact","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.caaea633.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nlet BaseUrl\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    BaseUrl = 'http://localhost:3001/api';\r\n} else {\r\n    BaseUrl = '/api/';\r\n}\r\n\r\nconst RoutUrls = {\r\n    GetLastData: `${BaseUrl}/get-last-data`,\r\n    GetGenreMovies: `${BaseUrl}/genre`,\r\n    GetMovieDetail: `${BaseUrl}/get-detail-movie`,\r\n    GetMovieByName: `${BaseUrl}/search-by-name`\r\n}\r\n\r\n\r\n\r\nfunction Get(url, data) {\r\n    let params = data === undefined ? '' : data;\r\n    // console.log(params)\r\n    const promise = new Promise((resolve, reject) => {\r\n        Axios.get(url,{\r\n            data: JSON.stringify(params)\r\n        })\r\n            .then(result => {\r\n                // console.log(result)\r\n                resolve(result.data)\r\n            }, (err) => reject(err))\r\n        // .catch(err => console.log('error: ', err));\r\n    })\r\n    return promise;\r\n}\r\n\r\nfunction Post(url, data) {\r\n    let params = data === undefined ? '' : data;\r\n    const promise = new Promise((resolve, reject) => {\r\n        Axios({\r\n            method: 'POST',\r\n            url:url,\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data:JSON.stringify(params)\r\n          })\r\n            .then((result)=> {\r\n                resolve(result.data)\r\n            }).catch((err)=> reject(err));\r\n    })\r\n    return promise;\r\n\r\n}\r\n\r\nconst GetLastData = (param) => Get(RoutUrls.GetLastData, param);\r\nconst GetGenreMovies = (param) => Get(RoutUrls.GetGenreMovies, param);\r\nconst GetMovieDetail = (param) => Post(RoutUrls.GetMovieDetail, param);\r\nconst GetMovieByName = (param) => Post(RoutUrls.GetMovieByName, param);\r\nconst API = {\r\n    GetLastData,\r\n    GetGenreMovies,\r\n    GetMovieDetail,\r\n    GetMovieByName\r\n}\r\n\r\nexport default API;","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport API from '../../../Services';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n// import CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        // padding: theme.spacing(2),\r\n        // textAlign: 'center',\r\n        // color: theme.palette.text.secondary,\r\n    },\r\n    cardMedia: {\r\n\r\n    },\r\n    card_img: {\r\n        height: '80vh',\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n\r\n}));\r\n\r\n\r\nfunction Detail(props) {\r\n    let id = props.match.params.id;\r\n    let dataId = { \"movie_id\": id };\r\n    const classes = useStyles();\r\n    const [movieDetail, setMovieDetail] = useState({});\r\n    const [isFetching, setIsFetching] = useState(false);\r\n\r\n    const override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: red;\r\n    `;\r\n    useEffect(() => {\r\n\r\n        API.GetMovieDetail(dataId)\r\n            .then((result) => {\r\n                // console.log(result);\r\n                setMovieDetail(result)\r\n                setIsFetching(true);\r\n            })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    if (!isFetching) {\r\n        return (\r\n            <div className=\"sweet-loading\">\r\n                <ClipLoader\r\n                    css={override}\r\n                    size={150}\r\n                    color={\"#123abc\"}\r\n                    loading={true}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    } else {\r\n        console.log(movieDetail);\r\n        let kosong = (<span style={{ display: \"block\" }} className={\"under-desc font-weight-bold\"}>-</span>);\r\n        return (\r\n            <Container maxWidth=\"lg\">\r\n                <CssBaseline />\r\n                <Grid container spacing={4} style={{ marginTop: '20px' }}>\r\n                    <Grid item md={4} style={{ marginBottom: '20px', color: 'white' }}>\r\n                        <Card className={classes.card}>\r\n                            <CardMedia className={`${classes.cardMedia} ${classes.card_img}`}\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"100vh\"\r\n                                image={`https://image.tmdb.org/t/p/original/${movieDetail.backdrop_path}`}\r\n                                title=\"Contemplative Reptile\" />\r\n\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item md={8} style={{ marginBottom: '20px' }}>\r\n                        {/* <Card className={classes.card}> */}\r\n                        <CardContent className={classes.cardContent}>\r\n                            <Typography className={\"font-weight-bold\"} gutterBottom align='center' >INTRODUCTION</Typography>\r\n                            <Typography className={\"judul\"} gutterBottom variant=\"h5\" align='center' >{movieDetail.title}</Typography>\r\n                            <hr style={{marginBottom: \"1rem\"}} />\r\n                            <Typography style={{marginBottom: \"1rem\"}} className={\"under-desc font-weight-bold\"} align='center'>Release date {movieDetail.release_date}</Typography>\r\n                            <Typography className={\"sinopsis sinopsis-first-letter\"}>{movieDetail.overview}</Typography>\r\n                            <Container style={{ marginTop: '1rem' }}>\r\n                                <Grid container spacing={3}>\r\n\r\n                                    <Grid item xs={3}>\r\n                                        <span>production countries</span>\r\n                                        {movieDetail.production_countries.length === 0 ? kosong: movieDetail.production_countries.map((countries, index) => (\r\n                                            <span key={index} style={{ display: \"block\" }} className=\"under-desc font-weight-bold\">{countries.name}</span>\r\n                                        ))}\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <span>production companies</span>\r\n                                        {movieDetail.production_companies.length === 0 ? kosong : movieDetail.production_companies.map((companies, index) => (\r\n                                            <span style={{ display: \"block\" }} key={index} className=\"under-desc font-weight-bold\">{companies.name}</span>\r\n                                        ))}\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <span>Genre</span>\r\n                                        {movieDetail.genres.length === 0 ? kosong : movieDetail.genres.map((genres, index) => (\r\n                                            <span style={{ display: \"block\" }} key={index} className=\"under-desc font-weight-bold\">{genres.name}</span>\r\n                                        ))}\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <span>Spoken languages</span>\r\n                                        {movieDetail.spoken_languages.length === 0 ? kosong : movieDetail.spoken_languages.map((spoken, index) => (\r\n                                            <span key={index} style={{ display: \"block\" }} className=\"under-desc font-weight-bold\">{spoken.name}</span>\r\n                                        ))}\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <span>popularity</span>\r\n                                        <span style={{ display: \"block\" }} className=\"under-desc font-weight-bold\">{movieDetail.popularity}</span>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <span>revenue</span>\r\n                                        <span style={{ display: \"block\" }} className=\"under-desc font-weight-bold\">{movieDetail.revenue}</span>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <span>runtime</span>\r\n                                        <span style={{ display: \"block\" }} className=\"under-desc font-weight-bold\">{movieDetail.runtime}</span>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <span>status</span>\r\n                                        <span style={{ display: \"block\" }} className=\"under-desc font-weight-bold\">{movieDetail.status}</span>\r\n\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Container >\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Link to={'/'} style={{ textDecoration: \"none\" }}>\r\n                                <Button variant=\"outlined\" size=\"small\" color=\"primary\" className={'trans-btn-costome'} startIcon={<ArrowBackIcon />}> Back </Button>\r\n                            </Link>\r\n                        </CardActions>\r\n                        {/* </Card> */}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Container>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        count: state.count,\r\n        movie_list: state.movie_list\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","import { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    appCostume:{\r\n        color: 'white !important',\r\n        backgroundColor:'rgba(119,119,119,0.3)',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '80ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles","const ActionType = {\r\n    PENJUMLAHAN: 'PENJUMLAHAN',\r\n    PENGURANGAN: 'PENGURANGAN',\r\n    CHANGE_COUNT: 'CHANGE_COUNT',\r\n    INITIAL_GET_DATA_MOVIE: 'INITIAL_GET_DATA_MOVIE',\r\n    INITIAL_GET_GENRE_MOVIE:'INITIAL_GET_GENRE_MOVIE',\r\n    GET_MOVIE_BY_NAME:'GET_MOVIE_BY_NAME'\r\n}\r\n\r\nexport default ActionType","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MovieFilterTwoToneIcon from '@material-ui/icons/MovieFilterTwoTone';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport useStyles from './style';\r\nimport { connect } from 'react-redux';\r\nimport API from '../../Services';\r\nimport ActionType from '../../Redux/globalActionType';\r\n\r\n\r\n\r\nfunction NavbarComponent(props) {\r\n    const classes = useStyles();\r\n\r\n    const handleSearch = (event) => {\r\n        let data = event.target.value;\r\n        const dataByName = { query: data }\r\n        if (dataByName.query !== \"\") {\r\n            // console.log(\"data Ada\");\r\n            API.GetMovieByName(dataByName)\r\n                .then(result => {\r\n                    console.log(result)\r\n                    props.GetMovieByName(result)\r\n                    console.log(props.movie_list)\r\n                })\r\n        } else {\r\n            // console.log(\"data kosong\");\r\n            API.GetLastData()\r\n                .then(result => {\r\n                    // console.log(1)\r\n                    props.GetInitialDataMovie(result)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.grow} >\r\n            <AppBar position=\"fixed\" className={classes.appCostume}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <MovieFilterTwoToneIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>Movie List </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            onChange={handleSearch}\r\n                            placeholder=\"Find your movie....\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movie_list: state.movie_list\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        GetMovieByName: (newValue) => dispatch({ type: ActionType.GET_MOVIE_BY_NAME, payload: newValue }),\r\n        GetInitialDataMovie: (newValue) => dispatch({ type: ActionType.INITIAL_GET_DATA_MOVIE, newValueRedux: newValue }),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarComponent)","import { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport useStyles from './style';\r\n\r\nfunction Copyright() {\r\n    const classes = useStyles();\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>Movie List</Typography>\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">Thank you for visiting</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">{'Copyright © '}\r\n                <Link color=\"inherit\" href=\"http://henryas.com/\">Henry As\r\n                </Link>{' '}{new Date().getFullYear()}{'.'}\r\n            </Typography>\r\n        </footer>\r\n\r\n    );\r\n}\r\n\r\nexport default Copyright;","import { makeStyles } from '@material-ui/core/styles';\r\n// import { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n   \r\n    parentHero:{\r\n        postion: \"relative\",\r\n        overflow: \"hidden\",\r\n    },\r\n    heroContent: {\r\n        position: \"absolute\",\r\n        top: '20%',\r\n        color:'white !important',\r\n        width: '100%'\r\n        // padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        // marginTop: theme.spacing(4),\r\n    },\r\n    imgHero: {\r\n        width: '100%',\r\n        objectPosition: 'center',\r\n        height: '90vh',\r\n        objectFit: 'cover',\r\n    },\r\n    // contentHero: {\r\n    //     position: \"absolute\",\r\n    //     top: '30%',\r\n    //     color:'white !important'\r\n    // }\r\n}));\r\n\r\nexport default useStyles","import React from 'react';\r\nimport { Typography, Grid, Button } from '@material-ui/core/';\r\nimport useStyles from './style';\r\nimport imgHero from './img-hero.jpg';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Hero({ genres }) {\r\n    const classes = useStyles();\r\n    \r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid item xs={12} className={classes.parentHero} style={{ position: 'relative' }}>\r\n                <img src={imgHero} className={classes.imgHero} alt=\"img\" />\r\n                <div className={classes.heroContent}>\r\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" gutterBottom>Welcome my Aplication</Typography>\r\n                    <Typography align=\"center\" paragraph>Millions of movies, TV shows and people to discover. Explore now.</Typography>\r\n                    <Grid container spacing={2} justify=\"center\">\r\n                        {genres && genres.genres && genres.genres.map((data, index) => (\r\n                            <Grid item key={data.id}>\r\n                                <Button variant=\"outlined\" color=\"primary\" className={'trans-btn-costome,'}>{data.name}</Button>\r\n                            </Grid>\r\n\r\n                        ))}\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        genres: state.genre\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hero);","import { makeStyles } from '@material-ui/core/styles';\r\nimport imgHero from './img-hero.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main: {\r\n        background: `url(${imgHero})`,\r\n        backgroundAttachment: 'fixed',\r\n        backgroundPosition: 'top',\r\n        backgrountRepeat: 'no-repeat',\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(8),\r\n\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#333',\r\n        color: 'white',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import React, { } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { PageviewOutlined } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport useStyles from '../style';\r\n// import API from '../../../../Services';\r\n// import ActionType from '../../../../Redux/globalActionType';\r\n\r\nfunction Body({ isFetching, movie_list }) {\r\n\r\n    // const [data, setData] = useState(0);\r\n\r\n    // console.log(movie_list.results[1])\r\n    const classes = useStyles();\r\n    //movie_list.hasOwnProperty('results')\r\n    if (movie_list.results.length ===0) {\r\n        console.log('data kosong')\r\n        return (\r\n            <Grid container spacing={2} style={{ marginTop: '20px', color: 'white' }}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h5\">Data Not Found</Typography>\r\n            </Grid>\r\n           \r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                {/* <p style={{ color: 'white' }}>{JSON.stringify(movie_list)}</p>  */}\r\n                <Grid container spacing={2} style={{ marginTop: '20px' }}>\r\n                    {movie_list.results.map((movie, index) => (\r\n                        <Grid item key={index} xs={12} sm={6} md={3} style={{ marginBottom: '20px', color: 'white' }}>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia className={classes.cardMedia} image={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} title={movie.title} />\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">{movie.title}</Typography>\r\n                                    <Typography>{movie.overview.substring(0, 100)}...</Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Link to={`/detail/${movie.id}`} style={{ textDecoration: \"none\" }}>\r\n                                        <Button variant=\"outlined\" size=\"small\" color=\"primary\" className={'trans-btn-costome'} startIcon={<PageviewOutlined />}> View </Button>\r\n                                    </Link>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cards: state.card,\r\n        isFetching: state.movie_list.isFetching,\r\n        movie_list: state.movie_list.data\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // INITIAL_GET_DATA_MOVIE_2: (newData) => dispatch({ type: ActionType.INITIAL_GET_DATA_MOVIE_2, newValueRedux: newData })\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","import React from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport NavbarComponent from '../../../component/navbar';\r\n\r\nimport Copyright from '../../../component/footer';\r\nimport Hero from '../../../component/hero';\r\n\r\nimport useStyles from './style';\r\nimport Body from './card-body';\r\n\r\n\r\nfunction Movie() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <NavbarComponent />\r\n      <main className={classes.main}>\r\n        {/* Hero unit */}\r\n        <Hero />\r\n        {/* End hero unit */}\r\n\r\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\r\n          <Typography component=\"h4\" variant=\"h4\" align=\"left\" style={{ color: 'white' }} >List movie</Typography>\r\n          <Body />\r\n        </Container>\r\n\r\n        {/* Footer */}\r\n        <Copyright />\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            <h1>404 - Not Found!</h1>\r\n            <Link to=\"/\"> Go Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Detail from './pages/detail';\r\nimport Movie from './pages/movie';\r\nimport NotFound from './pages/not-found';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Movie}/>\r\n          <Route path=\"/detail/:id\" component={Detail} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      cards: state.card,\r\n      Movie_List: state.Movie_List\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './container/home'\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'\n// import thunk from 'redux-thunk';\nimport rootReducer from './Redux/globalReducer';\nimport ActionType from './Redux/globalActionType'\nimport API from './Services';\n\nlet storeRedux;\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  storeRedux = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n} else {\n  storeRedux = createStore(rootReducer);\n}\n\n\n// initial fatch data api and fatch data pre rendering react\nconst gatDataMovie = () => {\n  API.GetLastData()\n    .then(result => {\n      // console.log(1)\n      storeRedux.dispatch({ type: ActionType.INITIAL_GET_DATA_MOVIE, newValueRedux: result })\n    }).then(() => getDataGenres())\n}\nconst getDataGenres = () => {\n  API.GetGenreMovies()\n    .then(result => {\n      // console.log(2)\n      storeRedux.dispatch({ type: ActionType.INITIAL_GET_GENRE_MOVIE, newValueRedux: result });\n    }).then(() => renderReact())\n}\n\nconst renderReact = () => {\n  // console.log(3)\n  ReactDOM.render(\n    <Provider store={storeRedux}>\n      <Home />\n    </Provider>,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n}\n\ngatDataMovie();\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// import API from '../Services'\r\nimport ActionType from './globalActionType'\r\n\r\n\r\nconst globalState = {\r\n    count: 1,\r\n    card: [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    genre: [],\r\n    movie_list: {\r\n        isFetching:false,\r\n        data:{}\r\n    }\r\n}\r\n\r\n\r\nconst rootReducer = (state = globalState, action) => {\r\n    switch (action.type) {\r\n        case ActionType.PENJUMLAHAN:\r\n            //  console.log(state)\r\n            return {\r\n                ...state,\r\n                count: state.count + 1,\r\n            }\r\n\r\n        case ActionType.PENGURANGAN:\r\n            // console.log(state.count)\r\n            if (state.count > 0) {\r\n                return {\r\n                    ...state,\r\n                    count: state.count - 1\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                }\r\n            }\r\n        case ActionType.CHANGE_COUNT:\r\n            return {\r\n                ...state,\r\n                count: action.newValueRedux\r\n            }\r\n\r\n        case ActionType.INITIAL_GET_DATA_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie_list:{ \r\n                    isFetching:true,\r\n                    data:action.newValueRedux\r\n                }\r\n            }\r\n        case ActionType.INITIAL_GET_GENRE_MOVIE:\r\n            return {\r\n                ...state,\r\n                genre: action.newValueRedux,\r\n            }\r\n        case ActionType.GET_MOVIE_BY_NAME:\r\n            return {\r\n                ...state,\r\n                movie_list:{ \r\n                    isFetching:true,\r\n                    data:action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default rootReducer;","module.exports = __webpack_public_path__ + \"static/media/img-hero.c2d41e8d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img-hero.c2d41e8d.jpg\";"],"sourceRoot":""}